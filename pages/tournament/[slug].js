import dynamic from "next/dynamic";
import Head from "next/head";
import tournamentByTitle from "../../graphQL/tournamentByTitle";
import { Get } from "@Dto/Api";
const TourDetail = dynamic(() => import("@Component/TourDetail"));
const TableNodata = dynamic(() => import("@Component/commons/TableNodata"));
import useFavorite from "../../store/useFavorite";
import useCurrentTouraments from "store/useCurrentTouraments";
import {setSidebarDisplay} from "@Dto/states";

const TournamentDetail = ({ initial, mutateSlug, keyAPI }) => {
    let title = initial.data?.findTournamentDetailByName[0]?.tournament_name || 'Not Found'
    const { currentTournames } = useCurrentTouraments()
    const { favorites, setFavorites } = useFavorite();
    setSidebarDisplay(true)
    const onChangeLocalStorage = (itemsChecked) => {
        let newfavorites = JSON.parse(localStorage.getItem("favorites"))
        newfavorites[mutateSlug] = {
            items: itemsChecked,
            infors: initial?.data?.findTournamentDetailByName[0]
        };
        setFavorites(newfavorites)
    }
    const renderSlugByName = (name) => {
        return name.toLowerCase().replace(/[^\w\s]/gi, '').trim().replace(/\s+/g, '_')
      }
    const checkIsCurrent = () => {
        let isCheck = currentTournames.findIndex(tour => {
          return renderSlugByName(tour.tournament_name) === mutateSlug
        })
        return isCheck !== -1
    }
    return <>
        <Head>
            <title>IGX2 | Tournament {title}</title>
            <meta name="description" content="Generated by Golf live page" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
            {initial?.data?.findTournamentDetailByName[0] ?
                <TourDetail findTournamentDetailByName={initial?.data?.findTournamentDetailByName[0]}
                    slug={mutateSlug}
                    itemFavs={favorites && favorites[mutateSlug]?.items ? favorites[mutateSlug].items : []}
                    isCurrent={checkIsCurrent()}
                    onChangeLocalStorage={onChangeLocalStorage}
                />
                : <TableNodata />}
        </main>

    </>
}


export async function getServerSideProps({ query }) {
    let { slug } = query
    let mutateSlug = slug.replaceAll('-', '_')
    const initial = await Get({ query: tournamentByTitle(mutateSlug) })
    return {
        props: {
            initial,
            mutateSlug,
            keyAPI: process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY
        },
    }
}

export default TournamentDetail
