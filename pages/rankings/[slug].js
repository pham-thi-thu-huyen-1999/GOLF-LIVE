import dynamic from "next/dynamic";
import Head from "next/head";
import { Get } from "@Dto/Api";
import findTournamentRankingByName from "graphQL/findTournamentRankingByName";
const TableNodata = dynamic(() => import("@Component/commons/TableNodata"));
const RankingDetail = dynamic(() => import("@Component/RankingDetail"));
import React from "react";
import {setSidebarDisplay} from "@Dto/states";

const Ranking = ({ initial, mutateSlug }) => {
    setSidebarDisplay(true)
    let title = initial.data?.findTournamentRankingByName[0]?.tournament_name || 'Not Found';
    return <>
        <Head>
            <title>IGX2 | Tournament {title}</title>
            <meta name="description" content="Generated by Golf live page" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
            {initial.data?.findTournamentRankingByName[0] ?
                <RankingDetail
                    findTournamentRankingByName={initial.data?.findTournamentRankingByName[0]}
                    slug={mutateSlug} />
                : <TableNodata />}
        </main>
    </>
}


export async function getServerSideProps({ query }) {
    let { slug } = query
    let mutateSlug = slug.replaceAll('-', '_')
    const initial = await Get({ query: findTournamentRankingByName(mutateSlug) })

    return {
        props: {
            initial,
            mutateSlug,
            keyAPI: process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY
        },
    }
}

export default Ranking
